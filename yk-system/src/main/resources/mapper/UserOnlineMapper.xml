<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yk.system.mapper.UserOnlineMapper">
    <!-- 新增在线用户记录 -->
    <insert id="insertUserOnline" parameterType="UserOnline">
        insert into tb_user_online(
        <include refid="userOnline_add_key">
            <property name="alias" value=""/>
        </include>
        )
        values
        ( #{sessionId}, #{loginName}, #{ipAddr}, #{loginLocation}, #{browser}, #{os}, #{status}, #{startTime}, #{lastAccessTime}, #{expireTime}, #{remark}, #{createUserId}, #{createTime}, #{updateUserId}, #{updateTime} )
    </insert>

    <!-- 批量新增在线用户记录 -->
    <insert id="insertUserOnlineBatch">
        insert into tb_user_online(
        <include refid="userOnline_add_key">
            <property name="alias" value=""/>
        </include>
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
                (#{item.sessionId}, #{item.loginName}, #{item.ipAddr}, #{item.loginLocation}, #{item.browser}, #{item.os}, #{item.status}, #{item.startTime}, #{item.lastAccessTime}, #{item.expireTime}, #{item.remark}, #{item.createUserId}, #{item.createTime}, #{item.updateUserId}, #{item.updateTime})
        </foreach>
    </insert>

    <!--  更新在线用户记录  -->
    <update id="updateUserOnline" parameterType="UserOnline">
        update tb_user_online
        <set>
            <if test="loginName != null  and loginName != '' and loginName != 'null' and loginName != 'undefined' ">
                login_name = #{loginName},
            </if>
            <if test="ipAddr != null  and ipAddr != '' and ipAddr != 'null' and ipAddr != 'undefined' ">
                ip_addr = #{ipAddr},
            </if>
            <if test="loginLocation != null  and loginLocation != '' and loginLocation != 'null' and loginLocation != 'undefined' ">
                login_location = #{loginLocation},
            </if>
            <if test="browser != null  and browser != '' and browser != 'null' and browser != 'undefined' ">
                browser = #{browser},
            </if>
            <if test="os != null  and os != '' and os != 'null' and os != 'undefined' ">
                os = #{os},
            </if>
            <if test="status != null ">
                status = #{status},
            </if>
            <if test="startTime != null  and startTime != '' and startTime != 'null' and startTime != 'undefined' ">
                start_time = #{startTime},
            </if>
            <if test="lastAccessTime != null  and lastAccessTime != '' and lastAccessTime != 'null' and lastAccessTime != 'undefined' ">
                last_access_time = #{lastAccessTime},
            </if>
            <if test="expireTime != null ">
                expire_time = #{expireTime},
            </if>
            <if test="remark != null  and remark != '' and remark != 'null' and remark != 'undefined' ">
                remark = #{remark},
            </if>
            <if test="createUserId != null  and createUserId != '' and createUserId != 'null' and createUserId != 'undefined' ">
                create_user_id = #{createUserId},
            </if>
            <if test="createTime != null  and createTime != '' and createTime != 'null' and createTime != 'undefined' ">
                create_time = #{createTime},
            </if>
            <if test="updateUserId != null  and updateUserId != '' and updateUserId != 'null' and updateUserId != 'undefined' ">
                update_user_id = #{updateUserId},
            </if>
            <if test="updateTime != null  and updateTime != '' and updateTime != 'null' and updateTime != 'undefined' ">
                update_time = #{updateTime},
            </if>
        </set>
        where session_id = #{sessionId}
    </update>

    <!-- 根据id删除在线用户记录 -->
    <update id="deleteUserOnlineById">
        update tb_user_online set status = 0 where session_id = #{sessionId}
    </update>

    <!-- 批量删除在线用户记录 -->
    <update id="deleteBatchUserOnlineByIds" parameterType="List">
        update tb_user_online set status = 0 where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 根据id真删除在线用户记录 -->
    <delete id="deleteUserOnlineRealById">
        delete from tb_user_online where session_id = #{sessionId}
    </delete>

    <!-- 批量真删除在线用户记录 -->
    <delete id="deleteBatchUserOnlineRealByIds">
        delete from tb_user_online where id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 根据id获取在线用户记录 -->
    <select id="getUserOnlineById" resultType="UserOnline">
        select
        <include refid="userOnline_select_cond"/>
        from tb_user_online a
        where a.session_id = #{sessionId} and a.status = 'ON_LINE'
    </select>

    <!-- 查询在线用户记录集合 -->
    <select id="listUserOnlines" parameterType="UserOnlineQuery" resultType="UserOnline">
        select
        <include refid="userOnline_select_cond"/>
        from tb_user_online a
        <where>
            <if test="loginName != null  and loginName != '' and loginName != 'null' and loginName != 'undefined' ">
                and a.login_name like concat('%', #{loginName}, '%')
            </if>
            <if test="status != null ">
                and a.status = #{status}
            </if>
            AND a.status  = 'ON_LINE'
        </where>
    </select>

    <sql id="userOnline_select_cond">
        a.session_id sessionId, a.login_name loginName, a.ip_addr ipAddr, a.login_location loginLocation, a.browser browser, a.os os, a.status status, a.start_time startTime, a.last_access_time lastAccessTime, a.expire_time expireTime, a.remark remark, a.create_user_id createUserId, a.create_time createTime, a.update_user_id updateUserId, a.update_time updateTime    </sql>

    <sql id="userOnline_add_key">
        session_id, login_name, ip_addr, login_location, browser, os, status, start_time, last_access_time, expire_time, remark, create_user_id, create_time, update_user_id, update_time    </sql>
</mapper>
